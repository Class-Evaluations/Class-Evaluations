#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Survey.App_Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Survey_DB_20")]
	public partial class SurveyReportDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnswer_Type(Answer_Type instance);
    partial void UpdateAnswer_Type(Answer_Type instance);
    partial void DeleteAnswer_Type(Answer_Type instance);
    partial void InsertAnswer_TF(Answer_TF instance);
    partial void UpdateAnswer_TF(Answer_TF instance);
    partial void DeleteAnswer_TF(Answer_TF instance);
    partial void InsertAnswer(Answer instance);
    partial void UpdateAnswer(Answer instance);
    partial void DeleteAnswer(Answer instance);
    partial void InsertAnswer_Short(Answer_Short instance);
    partial void UpdateAnswer_Short(Answer_Short instance);
    partial void DeleteAnswer_Short(Answer_Short instance);
    partial void InsertAnswer_Scale(Answer_Scale instance);
    partial void UpdateAnswer_Scale(Answer_Scale instance);
    partial void DeleteAnswer_Scale(Answer_Scale instance);
    partial void InsertAnswer_Multi_Choice(Answer_Multi_Choice instance);
    partial void UpdateAnswer_Multi_Choice(Answer_Multi_Choice instance);
    partial void DeleteAnswer_Multi_Choice(Answer_Multi_Choice instance);
    partial void InsertAnswer_Long(Answer_Long instance);
    partial void UpdateAnswer_Long(Answer_Long instance);
    partial void DeleteAnswer_Long(Answer_Long instance);
    partial void InsertSurvey_Request_Sent(Survey_Request_Sent instance);
    partial void UpdateSurvey_Request_Sent(Survey_Request_Sent instance);
    partial void DeleteSurvey_Request_Sent(Survey_Request_Sent instance);
    partial void InsertQuestion(Question instance);
    partial void UpdateQuestion(Question instance);
    partial void DeleteQuestion(Question instance);
    #endregion
		
		public SurveyReportDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Survey_DB_20ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SurveyReportDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SurveyReportDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SurveyReportDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SurveyReportDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Answer_Type> Answer_Types
		{
			get
			{
				return this.GetTable<Answer_Type>();
			}
		}
		
		public System.Data.Linq.Table<Answer_TF> Answer_TFs
		{
			get
			{
				return this.GetTable<Answer_TF>();
			}
		}
		
		public System.Data.Linq.Table<Answer> Answers
		{
			get
			{
				return this.GetTable<Answer>();
			}
		}
		
		public System.Data.Linq.Table<Answer_Short> Answer_Shorts
		{
			get
			{
				return this.GetTable<Answer_Short>();
			}
		}
		
		public System.Data.Linq.Table<Answer_Scale> Answer_Scales
		{
			get
			{
				return this.GetTable<Answer_Scale>();
			}
		}
		
		public System.Data.Linq.Table<Answer_Multi_Choice> Answer_Multi_Choices
		{
			get
			{
				return this.GetTable<Answer_Multi_Choice>();
			}
		}
		
		public System.Data.Linq.Table<Answer_Long> Answer_Longs
		{
			get
			{
				return this.GetTable<Answer_Long>();
			}
		}
		
		public System.Data.Linq.Table<Survey_Request_Sent> Survey_Request_Sents
		{
			get
			{
				return this.GetTable<Survey_Request_Sent>();
			}
		}
		
		public System.Data.Linq.Table<Question> Questions
		{
			get
			{
				return this.GetTable<Question>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANSWER_TYPE")]
	public partial class Answer_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _answer_type_id;
		
		private string _answer_type_name;
		
		private bool _multi_choice_single;
		
		private bool _multi_choice_multi;
		
		private bool _scale;
		
		private bool _answer_long;
		
		private bool _answer_short;
		
		private bool _true_false;
		
		private System.DateTime _datestamp;
		
		private int _user_stamp;
		
		private string _controlName;
		
		private EntitySet<Question> _Questions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onanswer_type_idChanging(int value);
    partial void Onanswer_type_idChanged();
    partial void Onanswer_type_nameChanging(string value);
    partial void Onanswer_type_nameChanged();
    partial void Onmulti_choice_singleChanging(bool value);
    partial void Onmulti_choice_singleChanged();
    partial void Onmulti_choice_multiChanging(bool value);
    partial void Onmulti_choice_multiChanged();
    partial void OnscaleChanging(bool value);
    partial void OnscaleChanged();
    partial void Onanswer_longChanging(bool value);
    partial void Onanswer_longChanged();
    partial void Onanswer_shortChanging(bool value);
    partial void Onanswer_shortChanged();
    partial void Ontrue_falseChanging(bool value);
    partial void Ontrue_falseChanged();
    partial void OndatestampChanging(System.DateTime value);
    partial void OndatestampChanged();
    partial void Onuser_stampChanging(int value);
    partial void Onuser_stampChanged();
    partial void OncontrolNameChanging(string value);
    partial void OncontrolNameChanged();
    #endregion
		
		public Answer_Type()
		{
			this._Questions = new EntitySet<Question>(new Action<Question>(this.attach_Questions), new Action<Question>(this.detach_Questions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_type_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int answer_type_id
		{
			get
			{
				return this._answer_type_id;
			}
			set
			{
				if ((this._answer_type_id != value))
				{
					this.Onanswer_type_idChanging(value);
					this.SendPropertyChanging();
					this._answer_type_id = value;
					this.SendPropertyChanged("answer_type_id");
					this.Onanswer_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_type_name", DbType="NChar(40) NOT NULL", CanBeNull=false)]
		public string answer_type_name
		{
			get
			{
				return this._answer_type_name;
			}
			set
			{
				if ((this._answer_type_name != value))
				{
					this.Onanswer_type_nameChanging(value);
					this.SendPropertyChanging();
					this._answer_type_name = value;
					this.SendPropertyChanged("answer_type_name");
					this.Onanswer_type_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_multi_choice_single", DbType="Bit NOT NULL")]
		public bool multi_choice_single
		{
			get
			{
				return this._multi_choice_single;
			}
			set
			{
				if ((this._multi_choice_single != value))
				{
					this.Onmulti_choice_singleChanging(value);
					this.SendPropertyChanging();
					this._multi_choice_single = value;
					this.SendPropertyChanged("multi_choice_single");
					this.Onmulti_choice_singleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_multi_choice_multi", DbType="Bit NOT NULL")]
		public bool multi_choice_multi
		{
			get
			{
				return this._multi_choice_multi;
			}
			set
			{
				if ((this._multi_choice_multi != value))
				{
					this.Onmulti_choice_multiChanging(value);
					this.SendPropertyChanging();
					this._multi_choice_multi = value;
					this.SendPropertyChanged("multi_choice_multi");
					this.Onmulti_choice_multiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scale", DbType="Bit NOT NULL")]
		public bool scale
		{
			get
			{
				return this._scale;
			}
			set
			{
				if ((this._scale != value))
				{
					this.OnscaleChanging(value);
					this.SendPropertyChanging();
					this._scale = value;
					this.SendPropertyChanged("scale");
					this.OnscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_long", DbType="Bit NOT NULL")]
		public bool answer_long
		{
			get
			{
				return this._answer_long;
			}
			set
			{
				if ((this._answer_long != value))
				{
					this.Onanswer_longChanging(value);
					this.SendPropertyChanging();
					this._answer_long = value;
					this.SendPropertyChanged("answer_long");
					this.Onanswer_longChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_short", DbType="Bit NOT NULL")]
		public bool answer_short
		{
			get
			{
				return this._answer_short;
			}
			set
			{
				if ((this._answer_short != value))
				{
					this.Onanswer_shortChanging(value);
					this.SendPropertyChanging();
					this._answer_short = value;
					this.SendPropertyChanged("answer_short");
					this.Onanswer_shortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_true_false", DbType="Bit NOT NULL")]
		public bool true_false
		{
			get
			{
				return this._true_false;
			}
			set
			{
				if ((this._true_false != value))
				{
					this.Ontrue_falseChanging(value);
					this.SendPropertyChanging();
					this._true_false = value;
					this.SendPropertyChanged("true_false");
					this.Ontrue_falseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datestamp", DbType="DateTime NOT NULL")]
		public System.DateTime datestamp
		{
			get
			{
				return this._datestamp;
			}
			set
			{
				if ((this._datestamp != value))
				{
					this.OndatestampChanging(value);
					this.SendPropertyChanging();
					this._datestamp = value;
					this.SendPropertyChanged("datestamp");
					this.OndatestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_stamp", DbType="Int NOT NULL")]
		public int user_stamp
		{
			get
			{
				return this._user_stamp;
			}
			set
			{
				if ((this._user_stamp != value))
				{
					this.Onuser_stampChanging(value);
					this.SendPropertyChanging();
					this._user_stamp = value;
					this.SendPropertyChanged("user_stamp");
					this.Onuser_stampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_controlName", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string controlName
		{
			get
			{
				return this._controlName;
			}
			set
			{
				if ((this._controlName != value))
				{
					this.OncontrolNameChanging(value);
					this.SendPropertyChanging();
					this._controlName = value;
					this.SendPropertyChanged("controlName");
					this.OncontrolNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Type_Question", Storage="_Questions", ThisKey="answer_type_id", OtherKey="answer_type_id")]
		public EntitySet<Question> Questions
		{
			get
			{
				return this._Questions;
			}
			set
			{
				this._Questions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Answer_Type = this;
		}
		
		private void detach_Questions(Question entity)
		{
			this.SendPropertyChanging();
			entity.Answer_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANSWER_TRUE_FALSE")]
	public partial class Answer_TF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _answer_true_false_id;
		
		private int _answer_id;
		
		private System.Nullable<bool> _submitted_answer;
		
		private int _survey_request_sent_id;
		
		private EntityRef<Answer> _Answer;
		
		private EntityRef<Survey_Request_Sent> _Survey_Request_Sent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onanswer_true_false_idChanging(int value);
    partial void Onanswer_true_false_idChanged();
    partial void Onanswer_idChanging(int value);
    partial void Onanswer_idChanged();
    partial void Onsubmitted_answerChanging(System.Nullable<bool> value);
    partial void Onsubmitted_answerChanged();
    partial void Onsurvey_request_sent_idChanging(int value);
    partial void Onsurvey_request_sent_idChanged();
    #endregion
		
		public Answer_TF()
		{
			this._Answer = default(EntityRef<Answer>);
			this._Survey_Request_Sent = default(EntityRef<Survey_Request_Sent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_true_false_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int answer_true_false_id
		{
			get
			{
				return this._answer_true_false_id;
			}
			set
			{
				if ((this._answer_true_false_id != value))
				{
					this.Onanswer_true_false_idChanging(value);
					this.SendPropertyChanging();
					this._answer_true_false_id = value;
					this.SendPropertyChanged("answer_true_false_id");
					this.Onanswer_true_false_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_id", DbType="Int NOT NULL")]
		public int answer_id
		{
			get
			{
				return this._answer_id;
			}
			set
			{
				if ((this._answer_id != value))
				{
					if (this._Answer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onanswer_idChanging(value);
					this.SendPropertyChanging();
					this._answer_id = value;
					this.SendPropertyChanged("answer_id");
					this.Onanswer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submitted_answer", DbType="Bit")]
		public System.Nullable<bool> submitted_answer
		{
			get
			{
				return this._submitted_answer;
			}
			set
			{
				if ((this._submitted_answer != value))
				{
					this.Onsubmitted_answerChanging(value);
					this.SendPropertyChanging();
					this._submitted_answer = value;
					this.SendPropertyChanged("submitted_answer");
					this.Onsubmitted_answerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_survey_request_sent_id", DbType="Int NOT NULL")]
		public int survey_request_sent_id
		{
			get
			{
				return this._survey_request_sent_id;
			}
			set
			{
				if ((this._survey_request_sent_id != value))
				{
					if (this._Survey_Request_Sent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsurvey_request_sent_idChanging(value);
					this.SendPropertyChanging();
					this._survey_request_sent_id = value;
					this.SendPropertyChanged("survey_request_sent_id");
					this.Onsurvey_request_sent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Answer_TF", Storage="_Answer", ThisKey="answer_id", OtherKey="answer_id", IsForeignKey=true)]
		public Answer Answer
		{
			get
			{
				return this._Answer.Entity;
			}
			set
			{
				Answer previousValue = this._Answer.Entity;
				if (((previousValue != value) 
							|| (this._Answer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Answer.Entity = null;
						previousValue.Answer_TFs.Remove(this);
					}
					this._Answer.Entity = value;
					if ((value != null))
					{
						value.Answer_TFs.Add(this);
						this._answer_id = value.answer_id;
					}
					else
					{
						this._answer_id = default(int);
					}
					this.SendPropertyChanged("Answer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer_TF", Storage="_Survey_Request_Sent", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id", IsForeignKey=true)]
		public Survey_Request_Sent Survey_Request_Sent
		{
			get
			{
				return this._Survey_Request_Sent.Entity;
			}
			set
			{
				Survey_Request_Sent previousValue = this._Survey_Request_Sent.Entity;
				if (((previousValue != value) 
							|| (this._Survey_Request_Sent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Survey_Request_Sent.Entity = null;
						previousValue.Answer_TFs.Remove(this);
					}
					this._Survey_Request_Sent.Entity = value;
					if ((value != null))
					{
						value.Answer_TFs.Add(this);
						this._survey_request_sent_id = value.survey_request_sent_id;
					}
					else
					{
						this._survey_request_sent_id = default(int);
					}
					this.SendPropertyChanged("Survey_Request_Sent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANSWER")]
	public partial class Answer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _answer_id;
		
		private int _question_id;
		
		private int _answer_type_id;
		
		private int _survey_request_sent_id;
		
		private EntitySet<Answer_TF> _Answer_TFs;
		
		private EntitySet<Answer_Short> _Answer_Shorts;
		
		private EntitySet<Answer_Scale> _Answer_Scales;
		
		private EntitySet<Answer_Multi_Choice> _Answer_Multi_Choices;
		
		private EntitySet<Answer_Long> _Answer_Longs;
		
		private EntityRef<Survey_Request_Sent> _Survey_Request_Sent;
		
		private EntityRef<Question> _Question;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onanswer_idChanging(int value);
    partial void Onanswer_idChanged();
    partial void Onquestion_idChanging(int value);
    partial void Onquestion_idChanged();
    partial void Onanswer_type_idChanging(int value);
    partial void Onanswer_type_idChanged();
    partial void Onsurvey_request_sent_idChanging(int value);
    partial void Onsurvey_request_sent_idChanged();
    #endregion
		
		public Answer()
		{
			this._Answer_TFs = new EntitySet<Answer_TF>(new Action<Answer_TF>(this.attach_Answer_TFs), new Action<Answer_TF>(this.detach_Answer_TFs));
			this._Answer_Shorts = new EntitySet<Answer_Short>(new Action<Answer_Short>(this.attach_Answer_Shorts), new Action<Answer_Short>(this.detach_Answer_Shorts));
			this._Answer_Scales = new EntitySet<Answer_Scale>(new Action<Answer_Scale>(this.attach_Answer_Scales), new Action<Answer_Scale>(this.detach_Answer_Scales));
			this._Answer_Multi_Choices = new EntitySet<Answer_Multi_Choice>(new Action<Answer_Multi_Choice>(this.attach_Answer_Multi_Choices), new Action<Answer_Multi_Choice>(this.detach_Answer_Multi_Choices));
			this._Answer_Longs = new EntitySet<Answer_Long>(new Action<Answer_Long>(this.attach_Answer_Longs), new Action<Answer_Long>(this.detach_Answer_Longs));
			this._Survey_Request_Sent = default(EntityRef<Survey_Request_Sent>);
			this._Question = default(EntityRef<Question>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int answer_id
		{
			get
			{
				return this._answer_id;
			}
			set
			{
				if ((this._answer_id != value))
				{
					this.Onanswer_idChanging(value);
					this.SendPropertyChanging();
					this._answer_id = value;
					this.SendPropertyChanged("answer_id");
					this.Onanswer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question_id", DbType="Int NOT NULL")]
		public int question_id
		{
			get
			{
				return this._question_id;
			}
			set
			{
				if ((this._question_id != value))
				{
					if (this._Question.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onquestion_idChanging(value);
					this.SendPropertyChanging();
					this._question_id = value;
					this.SendPropertyChanged("question_id");
					this.Onquestion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_type_id", DbType="Int NOT NULL")]
		public int answer_type_id
		{
			get
			{
				return this._answer_type_id;
			}
			set
			{
				if ((this._answer_type_id != value))
				{
					this.Onanswer_type_idChanging(value);
					this.SendPropertyChanging();
					this._answer_type_id = value;
					this.SendPropertyChanged("answer_type_id");
					this.Onanswer_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_survey_request_sent_id", DbType="Int NOT NULL")]
		public int survey_request_sent_id
		{
			get
			{
				return this._survey_request_sent_id;
			}
			set
			{
				if ((this._survey_request_sent_id != value))
				{
					if (this._Survey_Request_Sent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsurvey_request_sent_idChanging(value);
					this.SendPropertyChanging();
					this._survey_request_sent_id = value;
					this.SendPropertyChanged("survey_request_sent_id");
					this.Onsurvey_request_sent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Answer_TF", Storage="_Answer_TFs", ThisKey="answer_id", OtherKey="answer_id")]
		public EntitySet<Answer_TF> Answer_TFs
		{
			get
			{
				return this._Answer_TFs;
			}
			set
			{
				this._Answer_TFs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Answer_Short", Storage="_Answer_Shorts", ThisKey="answer_id", OtherKey="answer_id")]
		public EntitySet<Answer_Short> Answer_Shorts
		{
			get
			{
				return this._Answer_Shorts;
			}
			set
			{
				this._Answer_Shorts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Answer_Scale", Storage="_Answer_Scales", ThisKey="answer_id", OtherKey="answer_id")]
		public EntitySet<Answer_Scale> Answer_Scales
		{
			get
			{
				return this._Answer_Scales;
			}
			set
			{
				this._Answer_Scales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Answer_Multi_Choice", Storage="_Answer_Multi_Choices", ThisKey="answer_id", OtherKey="answer_id")]
		public EntitySet<Answer_Multi_Choice> Answer_Multi_Choices
		{
			get
			{
				return this._Answer_Multi_Choices;
			}
			set
			{
				this._Answer_Multi_Choices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Answer_Long", Storage="_Answer_Longs", ThisKey="answer_id", OtherKey="answer_id")]
		public EntitySet<Answer_Long> Answer_Longs
		{
			get
			{
				return this._Answer_Longs;
			}
			set
			{
				this._Answer_Longs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer", Storage="_Survey_Request_Sent", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id", IsForeignKey=true)]
		public Survey_Request_Sent Survey_Request_Sent
		{
			get
			{
				return this._Survey_Request_Sent.Entity;
			}
			set
			{
				Survey_Request_Sent previousValue = this._Survey_Request_Sent.Entity;
				if (((previousValue != value) 
							|| (this._Survey_Request_Sent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Survey_Request_Sent.Entity = null;
						previousValue.Answers.Remove(this);
					}
					this._Survey_Request_Sent.Entity = value;
					if ((value != null))
					{
						value.Answers.Add(this);
						this._survey_request_sent_id = value.survey_request_sent_id;
					}
					else
					{
						this._survey_request_sent_id = default(int);
					}
					this.SendPropertyChanged("Survey_Request_Sent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Answer", Storage="_Question", ThisKey="question_id", OtherKey="question_id", IsForeignKey=true)]
		public Question Question
		{
			get
			{
				return this._Question.Entity;
			}
			set
			{
				Question previousValue = this._Question.Entity;
				if (((previousValue != value) 
							|| (this._Question.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Question.Entity = null;
						previousValue.Answers.Remove(this);
					}
					this._Question.Entity = value;
					if ((value != null))
					{
						value.Answers.Add(this);
						this._question_id = value.question_id;
					}
					else
					{
						this._question_id = default(int);
					}
					this.SendPropertyChanged("Question");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Answer_TFs(Answer_TF entity)
		{
			this.SendPropertyChanging();
			entity.Answer = this;
		}
		
		private void detach_Answer_TFs(Answer_TF entity)
		{
			this.SendPropertyChanging();
			entity.Answer = null;
		}
		
		private void attach_Answer_Shorts(Answer_Short entity)
		{
			this.SendPropertyChanging();
			entity.Answer = this;
		}
		
		private void detach_Answer_Shorts(Answer_Short entity)
		{
			this.SendPropertyChanging();
			entity.Answer = null;
		}
		
		private void attach_Answer_Scales(Answer_Scale entity)
		{
			this.SendPropertyChanging();
			entity.Answer = this;
		}
		
		private void detach_Answer_Scales(Answer_Scale entity)
		{
			this.SendPropertyChanging();
			entity.Answer = null;
		}
		
		private void attach_Answer_Multi_Choices(Answer_Multi_Choice entity)
		{
			this.SendPropertyChanging();
			entity.Answer = this;
		}
		
		private void detach_Answer_Multi_Choices(Answer_Multi_Choice entity)
		{
			this.SendPropertyChanging();
			entity.Answer = null;
		}
		
		private void attach_Answer_Longs(Answer_Long entity)
		{
			this.SendPropertyChanging();
			entity.Answer = this;
		}
		
		private void detach_Answer_Longs(Answer_Long entity)
		{
			this.SendPropertyChanging();
			entity.Answer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANSWER_SHORT")]
	public partial class Answer_Short : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _answer_short_id;
		
		private int _answer_id;
		
		private string _submitted_answer;
		
		private int _survey_request_sent_id;
		
		private EntityRef<Answer> _Answer;
		
		private EntityRef<Survey_Request_Sent> _Survey_Request_Sent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onanswer_short_idChanging(int value);
    partial void Onanswer_short_idChanged();
    partial void Onanswer_idChanging(int value);
    partial void Onanswer_idChanged();
    partial void Onsubmitted_answerChanging(string value);
    partial void Onsubmitted_answerChanged();
    partial void Onsurvey_request_sent_idChanging(int value);
    partial void Onsurvey_request_sent_idChanged();
    #endregion
		
		public Answer_Short()
		{
			this._Answer = default(EntityRef<Answer>);
			this._Survey_Request_Sent = default(EntityRef<Survey_Request_Sent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_short_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int answer_short_id
		{
			get
			{
				return this._answer_short_id;
			}
			set
			{
				if ((this._answer_short_id != value))
				{
					this.Onanswer_short_idChanging(value);
					this.SendPropertyChanging();
					this._answer_short_id = value;
					this.SendPropertyChanged("answer_short_id");
					this.Onanswer_short_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_id", DbType="Int NOT NULL")]
		public int answer_id
		{
			get
			{
				return this._answer_id;
			}
			set
			{
				if ((this._answer_id != value))
				{
					if (this._Answer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onanswer_idChanging(value);
					this.SendPropertyChanging();
					this._answer_id = value;
					this.SendPropertyChanged("answer_id");
					this.Onanswer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submitted_answer", DbType="NChar(250)")]
		public string submitted_answer
		{
			get
			{
				return this._submitted_answer;
			}
			set
			{
				if ((this._submitted_answer != value))
				{
					this.Onsubmitted_answerChanging(value);
					this.SendPropertyChanging();
					this._submitted_answer = value;
					this.SendPropertyChanged("submitted_answer");
					this.Onsubmitted_answerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_survey_request_sent_id", DbType="Int NOT NULL")]
		public int survey_request_sent_id
		{
			get
			{
				return this._survey_request_sent_id;
			}
			set
			{
				if ((this._survey_request_sent_id != value))
				{
					if (this._Survey_Request_Sent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsurvey_request_sent_idChanging(value);
					this.SendPropertyChanging();
					this._survey_request_sent_id = value;
					this.SendPropertyChanged("survey_request_sent_id");
					this.Onsurvey_request_sent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Answer_Short", Storage="_Answer", ThisKey="answer_id", OtherKey="answer_id", IsForeignKey=true)]
		public Answer Answer
		{
			get
			{
				return this._Answer.Entity;
			}
			set
			{
				Answer previousValue = this._Answer.Entity;
				if (((previousValue != value) 
							|| (this._Answer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Answer.Entity = null;
						previousValue.Answer_Shorts.Remove(this);
					}
					this._Answer.Entity = value;
					if ((value != null))
					{
						value.Answer_Shorts.Add(this);
						this._answer_id = value.answer_id;
					}
					else
					{
						this._answer_id = default(int);
					}
					this.SendPropertyChanged("Answer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer_Short", Storage="_Survey_Request_Sent", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id", IsForeignKey=true)]
		public Survey_Request_Sent Survey_Request_Sent
		{
			get
			{
				return this._Survey_Request_Sent.Entity;
			}
			set
			{
				Survey_Request_Sent previousValue = this._Survey_Request_Sent.Entity;
				if (((previousValue != value) 
							|| (this._Survey_Request_Sent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Survey_Request_Sent.Entity = null;
						previousValue.Answer_Shorts.Remove(this);
					}
					this._Survey_Request_Sent.Entity = value;
					if ((value != null))
					{
						value.Answer_Shorts.Add(this);
						this._survey_request_sent_id = value.survey_request_sent_id;
					}
					else
					{
						this._survey_request_sent_id = default(int);
					}
					this.SendPropertyChanged("Survey_Request_Sent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANSWER_SCALE")]
	public partial class Answer_Scale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _answer_scale_id;
		
		private int _answer_id;
		
		private System.Nullable<int> _submitted_answer;
		
		private int _survey_request_sent_id;
		
		private EntityRef<Answer> _Answer;
		
		private EntityRef<Survey_Request_Sent> _Survey_Request_Sent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onanswer_scale_idChanging(int value);
    partial void Onanswer_scale_idChanged();
    partial void Onanswer_idChanging(int value);
    partial void Onanswer_idChanged();
    partial void Onsubmitted_answerChanging(System.Nullable<int> value);
    partial void Onsubmitted_answerChanged();
    partial void Onsurvey_request_sent_idChanging(int value);
    partial void Onsurvey_request_sent_idChanged();
    #endregion
		
		public Answer_Scale()
		{
			this._Answer = default(EntityRef<Answer>);
			this._Survey_Request_Sent = default(EntityRef<Survey_Request_Sent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_scale_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int answer_scale_id
		{
			get
			{
				return this._answer_scale_id;
			}
			set
			{
				if ((this._answer_scale_id != value))
				{
					this.Onanswer_scale_idChanging(value);
					this.SendPropertyChanging();
					this._answer_scale_id = value;
					this.SendPropertyChanged("answer_scale_id");
					this.Onanswer_scale_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_id", DbType="Int NOT NULL")]
		public int answer_id
		{
			get
			{
				return this._answer_id;
			}
			set
			{
				if ((this._answer_id != value))
				{
					if (this._Answer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onanswer_idChanging(value);
					this.SendPropertyChanging();
					this._answer_id = value;
					this.SendPropertyChanged("answer_id");
					this.Onanswer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submitted_answer", DbType="Int")]
		public System.Nullable<int> submitted_answer
		{
			get
			{
				return this._submitted_answer;
			}
			set
			{
				if ((this._submitted_answer != value))
				{
					this.Onsubmitted_answerChanging(value);
					this.SendPropertyChanging();
					this._submitted_answer = value;
					this.SendPropertyChanged("submitted_answer");
					this.Onsubmitted_answerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_survey_request_sent_id", DbType="Int NOT NULL")]
		public int survey_request_sent_id
		{
			get
			{
				return this._survey_request_sent_id;
			}
			set
			{
				if ((this._survey_request_sent_id != value))
				{
					if (this._Survey_Request_Sent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsurvey_request_sent_idChanging(value);
					this.SendPropertyChanging();
					this._survey_request_sent_id = value;
					this.SendPropertyChanged("survey_request_sent_id");
					this.Onsurvey_request_sent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Answer_Scale", Storage="_Answer", ThisKey="answer_id", OtherKey="answer_id", IsForeignKey=true)]
		public Answer Answer
		{
			get
			{
				return this._Answer.Entity;
			}
			set
			{
				Answer previousValue = this._Answer.Entity;
				if (((previousValue != value) 
							|| (this._Answer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Answer.Entity = null;
						previousValue.Answer_Scales.Remove(this);
					}
					this._Answer.Entity = value;
					if ((value != null))
					{
						value.Answer_Scales.Add(this);
						this._answer_id = value.answer_id;
					}
					else
					{
						this._answer_id = default(int);
					}
					this.SendPropertyChanged("Answer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer_Scale", Storage="_Survey_Request_Sent", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id", IsForeignKey=true)]
		public Survey_Request_Sent Survey_Request_Sent
		{
			get
			{
				return this._Survey_Request_Sent.Entity;
			}
			set
			{
				Survey_Request_Sent previousValue = this._Survey_Request_Sent.Entity;
				if (((previousValue != value) 
							|| (this._Survey_Request_Sent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Survey_Request_Sent.Entity = null;
						previousValue.Answer_Scales.Remove(this);
					}
					this._Survey_Request_Sent.Entity = value;
					if ((value != null))
					{
						value.Answer_Scales.Add(this);
						this._survey_request_sent_id = value.survey_request_sent_id;
					}
					else
					{
						this._survey_request_sent_id = default(int);
					}
					this.SendPropertyChanged("Survey_Request_Sent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANSWER_MULTIPLE_CHOICE")]
	public partial class Answer_Multi_Choice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _answer_multiple_choice_id;
		
		private int _answer_id;
		
		private string _submitted_answer;
		
		private int _survey_request_sent_id;
		
		private EntityRef<Answer> _Answer;
		
		private EntityRef<Survey_Request_Sent> _Survey_Request_Sent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onanswer_multiple_choice_idChanging(int value);
    partial void Onanswer_multiple_choice_idChanged();
    partial void Onanswer_idChanging(int value);
    partial void Onanswer_idChanged();
    partial void Onsubmitted_answerChanging(string value);
    partial void Onsubmitted_answerChanged();
    partial void Onsurvey_request_sent_idChanging(int value);
    partial void Onsurvey_request_sent_idChanged();
    #endregion
		
		public Answer_Multi_Choice()
		{
			this._Answer = default(EntityRef<Answer>);
			this._Survey_Request_Sent = default(EntityRef<Survey_Request_Sent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_multiple_choice_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int answer_multiple_choice_id
		{
			get
			{
				return this._answer_multiple_choice_id;
			}
			set
			{
				if ((this._answer_multiple_choice_id != value))
				{
					this.Onanswer_multiple_choice_idChanging(value);
					this.SendPropertyChanging();
					this._answer_multiple_choice_id = value;
					this.SendPropertyChanged("answer_multiple_choice_id");
					this.Onanswer_multiple_choice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_id", DbType="Int NOT NULL")]
		public int answer_id
		{
			get
			{
				return this._answer_id;
			}
			set
			{
				if ((this._answer_id != value))
				{
					if (this._Answer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onanswer_idChanging(value);
					this.SendPropertyChanging();
					this._answer_id = value;
					this.SendPropertyChanged("answer_id");
					this.Onanswer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submitted_answer", DbType="NChar(200)")]
		public string submitted_answer
		{
			get
			{
				return this._submitted_answer;
			}
			set
			{
				if ((this._submitted_answer != value))
				{
					this.Onsubmitted_answerChanging(value);
					this.SendPropertyChanging();
					this._submitted_answer = value;
					this.SendPropertyChanged("submitted_answer");
					this.Onsubmitted_answerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_survey_request_sent_id", DbType="Int NOT NULL")]
		public int survey_request_sent_id
		{
			get
			{
				return this._survey_request_sent_id;
			}
			set
			{
				if ((this._survey_request_sent_id != value))
				{
					if (this._Survey_Request_Sent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsurvey_request_sent_idChanging(value);
					this.SendPropertyChanging();
					this._survey_request_sent_id = value;
					this.SendPropertyChanged("survey_request_sent_id");
					this.Onsurvey_request_sent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Answer_Multi_Choice", Storage="_Answer", ThisKey="answer_id", OtherKey="answer_id", IsForeignKey=true)]
		public Answer Answer
		{
			get
			{
				return this._Answer.Entity;
			}
			set
			{
				Answer previousValue = this._Answer.Entity;
				if (((previousValue != value) 
							|| (this._Answer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Answer.Entity = null;
						previousValue.Answer_Multi_Choices.Remove(this);
					}
					this._Answer.Entity = value;
					if ((value != null))
					{
						value.Answer_Multi_Choices.Add(this);
						this._answer_id = value.answer_id;
					}
					else
					{
						this._answer_id = default(int);
					}
					this.SendPropertyChanged("Answer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer_Multi_Choice", Storage="_Survey_Request_Sent", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id", IsForeignKey=true)]
		public Survey_Request_Sent Survey_Request_Sent
		{
			get
			{
				return this._Survey_Request_Sent.Entity;
			}
			set
			{
				Survey_Request_Sent previousValue = this._Survey_Request_Sent.Entity;
				if (((previousValue != value) 
							|| (this._Survey_Request_Sent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Survey_Request_Sent.Entity = null;
						previousValue.Answer_Multi_Choices.Remove(this);
					}
					this._Survey_Request_Sent.Entity = value;
					if ((value != null))
					{
						value.Answer_Multi_Choices.Add(this);
						this._survey_request_sent_id = value.survey_request_sent_id;
					}
					else
					{
						this._survey_request_sent_id = default(int);
					}
					this.SendPropertyChanged("Survey_Request_Sent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANSWER_LONG")]
	public partial class Answer_Long : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _answer_long_id;
		
		private int _answer_id;
		
		private string _submitted_answer;
		
		private int _survey_request_sent_id;
		
		private EntityRef<Answer> _Answer;
		
		private EntityRef<Survey_Request_Sent> _Survey_Request_Sent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onanswer_long_idChanging(int value);
    partial void Onanswer_long_idChanged();
    partial void Onanswer_idChanging(int value);
    partial void Onanswer_idChanged();
    partial void Onsubmitted_answerChanging(string value);
    partial void Onsubmitted_answerChanged();
    partial void Onsurvey_request_sent_idChanging(int value);
    partial void Onsurvey_request_sent_idChanged();
    #endregion
		
		public Answer_Long()
		{
			this._Answer = default(EntityRef<Answer>);
			this._Survey_Request_Sent = default(EntityRef<Survey_Request_Sent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_long_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int answer_long_id
		{
			get
			{
				return this._answer_long_id;
			}
			set
			{
				if ((this._answer_long_id != value))
				{
					this.Onanswer_long_idChanging(value);
					this.SendPropertyChanging();
					this._answer_long_id = value;
					this.SendPropertyChanged("answer_long_id");
					this.Onanswer_long_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_id", DbType="Int NOT NULL")]
		public int answer_id
		{
			get
			{
				return this._answer_id;
			}
			set
			{
				if ((this._answer_id != value))
				{
					if (this._Answer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onanswer_idChanging(value);
					this.SendPropertyChanging();
					this._answer_id = value;
					this.SendPropertyChanged("answer_id");
					this.Onanswer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submitted_answer", DbType="NChar(2000)")]
		public string submitted_answer
		{
			get
			{
				return this._submitted_answer;
			}
			set
			{
				if ((this._submitted_answer != value))
				{
					this.Onsubmitted_answerChanging(value);
					this.SendPropertyChanging();
					this._submitted_answer = value;
					this.SendPropertyChanged("submitted_answer");
					this.Onsubmitted_answerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_survey_request_sent_id", DbType="Int NOT NULL")]
		public int survey_request_sent_id
		{
			get
			{
				return this._survey_request_sent_id;
			}
			set
			{
				if ((this._survey_request_sent_id != value))
				{
					if (this._Survey_Request_Sent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsurvey_request_sent_idChanging(value);
					this.SendPropertyChanging();
					this._survey_request_sent_id = value;
					this.SendPropertyChanged("survey_request_sent_id");
					this.Onsurvey_request_sent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Answer_Long", Storage="_Answer", ThisKey="answer_id", OtherKey="answer_id", IsForeignKey=true)]
		public Answer Answer
		{
			get
			{
				return this._Answer.Entity;
			}
			set
			{
				Answer previousValue = this._Answer.Entity;
				if (((previousValue != value) 
							|| (this._Answer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Answer.Entity = null;
						previousValue.Answer_Longs.Remove(this);
					}
					this._Answer.Entity = value;
					if ((value != null))
					{
						value.Answer_Longs.Add(this);
						this._answer_id = value.answer_id;
					}
					else
					{
						this._answer_id = default(int);
					}
					this.SendPropertyChanged("Answer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer_Long", Storage="_Survey_Request_Sent", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id", IsForeignKey=true)]
		public Survey_Request_Sent Survey_Request_Sent
		{
			get
			{
				return this._Survey_Request_Sent.Entity;
			}
			set
			{
				Survey_Request_Sent previousValue = this._Survey_Request_Sent.Entity;
				if (((previousValue != value) 
							|| (this._Survey_Request_Sent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Survey_Request_Sent.Entity = null;
						previousValue.Answer_Longs.Remove(this);
					}
					this._Survey_Request_Sent.Entity = value;
					if ((value != null))
					{
						value.Answer_Longs.Add(this);
						this._survey_request_sent_id = value.survey_request_sent_id;
					}
					else
					{
						this._survey_request_sent_id = default(int);
					}
					this.SendPropertyChanged("Survey_Request_Sent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SURVEY_REQUEST_SENT")]
	public partial class Survey_Request_Sent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _survey_request_sent_id;
		
		private int _survey_id;
		
		private int _course_id;
		
		private string _person_hash;
		
		private System.DateTime _expiration_date;
		
		private char _status_flag;
		
		private System.DateTime _date_sent;
		
		private int _user_stamp;
		
		private EntitySet<Answer_TF> _Answer_TFs;
		
		private EntitySet<Answer> _Answers;
		
		private EntitySet<Answer_Short> _Answer_Shorts;
		
		private EntitySet<Answer_Scale> _Answer_Scales;
		
		private EntitySet<Answer_Multi_Choice> _Answer_Multi_Choices;
		
		private EntitySet<Answer_Long> _Answer_Longs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsurvey_request_sent_idChanging(int value);
    partial void Onsurvey_request_sent_idChanged();
    partial void Onsurvey_idChanging(int value);
    partial void Onsurvey_idChanged();
    partial void Oncourse_idChanging(int value);
    partial void Oncourse_idChanged();
    partial void Onperson_hashChanging(string value);
    partial void Onperson_hashChanged();
    partial void Onexpiration_dateChanging(System.DateTime value);
    partial void Onexpiration_dateChanged();
    partial void Onstatus_flagChanging(char value);
    partial void Onstatus_flagChanged();
    partial void Ondate_sentChanging(System.DateTime value);
    partial void Ondate_sentChanged();
    partial void Onuser_stampChanging(int value);
    partial void Onuser_stampChanged();
    #endregion
		
		public Survey_Request_Sent()
		{
			this._Answer_TFs = new EntitySet<Answer_TF>(new Action<Answer_TF>(this.attach_Answer_TFs), new Action<Answer_TF>(this.detach_Answer_TFs));
			this._Answers = new EntitySet<Answer>(new Action<Answer>(this.attach_Answers), new Action<Answer>(this.detach_Answers));
			this._Answer_Shorts = new EntitySet<Answer_Short>(new Action<Answer_Short>(this.attach_Answer_Shorts), new Action<Answer_Short>(this.detach_Answer_Shorts));
			this._Answer_Scales = new EntitySet<Answer_Scale>(new Action<Answer_Scale>(this.attach_Answer_Scales), new Action<Answer_Scale>(this.detach_Answer_Scales));
			this._Answer_Multi_Choices = new EntitySet<Answer_Multi_Choice>(new Action<Answer_Multi_Choice>(this.attach_Answer_Multi_Choices), new Action<Answer_Multi_Choice>(this.detach_Answer_Multi_Choices));
			this._Answer_Longs = new EntitySet<Answer_Long>(new Action<Answer_Long>(this.attach_Answer_Longs), new Action<Answer_Long>(this.detach_Answer_Longs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_survey_request_sent_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int survey_request_sent_id
		{
			get
			{
				return this._survey_request_sent_id;
			}
			set
			{
				if ((this._survey_request_sent_id != value))
				{
					this.Onsurvey_request_sent_idChanging(value);
					this.SendPropertyChanging();
					this._survey_request_sent_id = value;
					this.SendPropertyChanged("survey_request_sent_id");
					this.Onsurvey_request_sent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_survey_id", DbType="Int NOT NULL")]
		public int survey_id
		{
			get
			{
				return this._survey_id;
			}
			set
			{
				if ((this._survey_id != value))
				{
					this.Onsurvey_idChanging(value);
					this.SendPropertyChanging();
					this._survey_id = value;
					this.SendPropertyChanged("survey_id");
					this.Onsurvey_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="Int NOT NULL")]
		public int course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_hash", DbType="NChar(256) NOT NULL", CanBeNull=false)]
		public string person_hash
		{
			get
			{
				return this._person_hash;
			}
			set
			{
				if ((this._person_hash != value))
				{
					this.Onperson_hashChanging(value);
					this.SendPropertyChanging();
					this._person_hash = value;
					this.SendPropertyChanged("person_hash");
					this.Onperson_hashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiration_date", DbType="DateTime NOT NULL")]
		public System.DateTime expiration_date
		{
			get
			{
				return this._expiration_date;
			}
			set
			{
				if ((this._expiration_date != value))
				{
					this.Onexpiration_dateChanging(value);
					this.SendPropertyChanging();
					this._expiration_date = value;
					this.SendPropertyChanged("expiration_date");
					this.Onexpiration_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_flag", DbType="NChar(1) NOT NULL")]
		public char status_flag
		{
			get
			{
				return this._status_flag;
			}
			set
			{
				if ((this._status_flag != value))
				{
					this.Onstatus_flagChanging(value);
					this.SendPropertyChanging();
					this._status_flag = value;
					this.SendPropertyChanged("status_flag");
					this.Onstatus_flagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_sent", DbType="DateTime NOT NULL")]
		public System.DateTime date_sent
		{
			get
			{
				return this._date_sent;
			}
			set
			{
				if ((this._date_sent != value))
				{
					this.Ondate_sentChanging(value);
					this.SendPropertyChanging();
					this._date_sent = value;
					this.SendPropertyChanged("date_sent");
					this.Ondate_sentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_stamp", DbType="Int NOT NULL")]
		public int user_stamp
		{
			get
			{
				return this._user_stamp;
			}
			set
			{
				if ((this._user_stamp != value))
				{
					this.Onuser_stampChanging(value);
					this.SendPropertyChanging();
					this._user_stamp = value;
					this.SendPropertyChanged("user_stamp");
					this.Onuser_stampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer_TF", Storage="_Answer_TFs", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id")]
		public EntitySet<Answer_TF> Answer_TFs
		{
			get
			{
				return this._Answer_TFs;
			}
			set
			{
				this._Answer_TFs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer", Storage="_Answers", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id")]
		public EntitySet<Answer> Answers
		{
			get
			{
				return this._Answers;
			}
			set
			{
				this._Answers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer_Short", Storage="_Answer_Shorts", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id")]
		public EntitySet<Answer_Short> Answer_Shorts
		{
			get
			{
				return this._Answer_Shorts;
			}
			set
			{
				this._Answer_Shorts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer_Scale", Storage="_Answer_Scales", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id")]
		public EntitySet<Answer_Scale> Answer_Scales
		{
			get
			{
				return this._Answer_Scales;
			}
			set
			{
				this._Answer_Scales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer_Multi_Choice", Storage="_Answer_Multi_Choices", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id")]
		public EntitySet<Answer_Multi_Choice> Answer_Multi_Choices
		{
			get
			{
				return this._Answer_Multi_Choices;
			}
			set
			{
				this._Answer_Multi_Choices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Survey_Request_Sent_Answer_Long", Storage="_Answer_Longs", ThisKey="survey_request_sent_id", OtherKey="survey_request_sent_id")]
		public EntitySet<Answer_Long> Answer_Longs
		{
			get
			{
				return this._Answer_Longs;
			}
			set
			{
				this._Answer_Longs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Answer_TFs(Answer_TF entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = this;
		}
		
		private void detach_Answer_TFs(Answer_TF entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = null;
		}
		
		private void attach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = this;
		}
		
		private void detach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = null;
		}
		
		private void attach_Answer_Shorts(Answer_Short entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = this;
		}
		
		private void detach_Answer_Shorts(Answer_Short entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = null;
		}
		
		private void attach_Answer_Scales(Answer_Scale entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = this;
		}
		
		private void detach_Answer_Scales(Answer_Scale entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = null;
		}
		
		private void attach_Answer_Multi_Choices(Answer_Multi_Choice entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = this;
		}
		
		private void detach_Answer_Multi_Choices(Answer_Multi_Choice entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = null;
		}
		
		private void attach_Answer_Longs(Answer_Long entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = this;
		}
		
		private void detach_Answer_Longs(Answer_Long entity)
		{
			this.SendPropertyChanging();
			entity.Survey_Request_Sent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUESTION")]
	public partial class Question : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _question_id;
		
		private int _answer_type_id;
		
		private string _question_text;
		
		private System.DateTime _datestamp;
		
		private int _user_stamp;
		
		private EntitySet<Answer> _Answers;
		
		private EntityRef<Answer_Type> _Answer_Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onquestion_idChanging(int value);
    partial void Onquestion_idChanged();
    partial void Onanswer_type_idChanging(int value);
    partial void Onanswer_type_idChanged();
    partial void Onquestion_textChanging(string value);
    partial void Onquestion_textChanged();
    partial void OndatestampChanging(System.DateTime value);
    partial void OndatestampChanged();
    partial void Onuser_stampChanging(int value);
    partial void Onuser_stampChanged();
    #endregion
		
		public Question()
		{
			this._Answers = new EntitySet<Answer>(new Action<Answer>(this.attach_Answers), new Action<Answer>(this.detach_Answers));
			this._Answer_Type = default(EntityRef<Answer_Type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int question_id
		{
			get
			{
				return this._question_id;
			}
			set
			{
				if ((this._question_id != value))
				{
					this.Onquestion_idChanging(value);
					this.SendPropertyChanging();
					this._question_id = value;
					this.SendPropertyChanged("question_id");
					this.Onquestion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer_type_id", DbType="Int NOT NULL")]
		public int answer_type_id
		{
			get
			{
				return this._answer_type_id;
			}
			set
			{
				if ((this._answer_type_id != value))
				{
					if (this._Answer_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onanswer_type_idChanging(value);
					this.SendPropertyChanging();
					this._answer_type_id = value;
					this.SendPropertyChanged("answer_type_id");
					this.Onanswer_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question_text", DbType="NChar(200) NOT NULL", CanBeNull=false)]
		public string question_text
		{
			get
			{
				return this._question_text;
			}
			set
			{
				if ((this._question_text != value))
				{
					this.Onquestion_textChanging(value);
					this.SendPropertyChanging();
					this._question_text = value;
					this.SendPropertyChanged("question_text");
					this.Onquestion_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datestamp", DbType="DateTime NOT NULL")]
		public System.DateTime datestamp
		{
			get
			{
				return this._datestamp;
			}
			set
			{
				if ((this._datestamp != value))
				{
					this.OndatestampChanging(value);
					this.SendPropertyChanging();
					this._datestamp = value;
					this.SendPropertyChanged("datestamp");
					this.OndatestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_stamp", DbType="Int NOT NULL")]
		public int user_stamp
		{
			get
			{
				return this._user_stamp;
			}
			set
			{
				if ((this._user_stamp != value))
				{
					this.Onuser_stampChanging(value);
					this.SendPropertyChanging();
					this._user_stamp = value;
					this.SendPropertyChanged("user_stamp");
					this.Onuser_stampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Question_Answer", Storage="_Answers", ThisKey="question_id", OtherKey="question_id")]
		public EntitySet<Answer> Answers
		{
			get
			{
				return this._Answers;
			}
			set
			{
				this._Answers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Answer_Type_Question", Storage="_Answer_Type", ThisKey="answer_type_id", OtherKey="answer_type_id", IsForeignKey=true)]
		public Answer_Type Answer_Type
		{
			get
			{
				return this._Answer_Type.Entity;
			}
			set
			{
				Answer_Type previousValue = this._Answer_Type.Entity;
				if (((previousValue != value) 
							|| (this._Answer_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Answer_Type.Entity = null;
						previousValue.Questions.Remove(this);
					}
					this._Answer_Type.Entity = value;
					if ((value != null))
					{
						value.Questions.Add(this);
						this._answer_type_id = value.answer_type_id;
					}
					else
					{
						this._answer_type_id = default(int);
					}
					this.SendPropertyChanged("Answer_Type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.Question = this;
		}
		
		private void detach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.Question = null;
		}
	}
}
#pragma warning restore 1591
