@model PagedList.IPagedList<Survey.Models.GetCoursesWithSurveyStatus_Result>
           
@{
    ViewBag.Title = "Courses";
}

<script src="@Url.Content("~/Scripts/jquery-ui-1.8.11.custom.min.js")" type="text/javascript"></script>

<h2>This list of courses are set to complete or 7 days past the activities last end date. </h2>
<h4>Not Available means the course participates have already been sent a survey or this course was disabled for surveying.</h4>

<p>
</p>

@using (Html.BeginForm())
{ 
@*    <p> 
        Find by barcode: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string) &nbsp; 
        <input type="submit" value="Search" />
    </p>*@ 
} 


<table>
    <tr>
        <th>
            <strong> Select a course </strong>
        </th>
@*        <th>
            <strong> Multiple course selection <br /></strong>
            <strong>for surveying COMING SOON!!!</strong>
        </th>
        <th>
         @Html.ActionLink("Activity ID", "Index", new { sortOrder = ViewBag.ActivitySortParm })
         </th>

        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParm })
        </th>
        <th>
            @Html.ActionLink("Course", "Index", new { sortOrder = ViewBag.CourseSortParm })
        </th>

      <th> 
        @Html.ActionLink("Barcode", "Index", new { sortOrder = ViewBag.BarcodeSortParm }) 
    </th> 
*@      
        <th>
            <strong> Activity ID </strong>
        </th>
        <th>
            <strong> Activity Title - Course Title </strong>
        </th>
        <th>
            <strong> Course Number </strong>
        </th>
        <th>
            <strong> Barcode </strong>
        </th>

        <th>
            <strong> Last Start Date </strong>
        </th>
        <th>
            <strong> Last End Date </strong>
        </th>
        <th>
            <strong> Course Status in CLASS </strong>
        </th>
        <th>
            <strong> Course Survey Status </strong>
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) 
{
    <tr>
        @if (item.course_status == null)
        {
            <td>
                @Html.ActionLink("Select", "../QuickView/Details", new { id = item.course_id })
            </td>
        }
        else 
        {
            <td>
                <font style="color:red">
                Survey expires @Html.DisplayFor(ModelItem => item.survey_exp_date)</font>
            </td> 
        }
@*        <td>             
            <input type="checkbox" name="deleteInputs" value="@item.course_id" />         
        </td>
*@
        <td>
            @Html.DisplayFor(ModelItem => item.activity_id)
        </td>
        
        @if (item.course_status == null)
        {
            <td>
                @Html.DisplayFor(ModelItem => item.activityTile) -
                
                @Html.DisplayFor(ModleItem => item.courseTitle)
            </td>
        }
        else
        {
            <td> 
                @Html.ActionLink(item.activityTile + "-" + item.courseTitle, "PrintCustomers")
            </td>
        }

        <td>
            @Html.DisplayFor(modelItem => item.course_id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.barcode_number)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.last_start_datetime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.last_end_datetime)

        </td>
        <td>
            @Html.DisplayFor(modelItem => item.course_status_id)    
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.course_status)    
        </td>
            
    </tr>
}
</table>

<div>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) 
    of @Model.PageCount 
    &nbsp; 
    @if (Model.HasPreviousPage) 
    { 
        @Html.ActionLink("<<", "Index", new { page = 1 }) 
        @Html.Raw("&nbsp;"); 
        @Html.ActionLink("< Prev", "Index", new { page = Model.PageNumber - 1 }) 
    } 
    else 
    { 
        @:<< 
        @Html.Raw("&nbsp;"); 
        @:< Prev 
    } 
    &nbsp; 
    @if (Model.HasNextPage) 
    { 
        @Html.ActionLink("Next >", "Index", new { page = Model.PageNumber + 1 }) 
        @Html.Raw("&nbsp;"); 
        @Html.ActionLink(">>", "Index", new { page = Model.PageCount }) 
    } 
    else 
    { 
        @:Next > 
        @Html.Raw("&nbsp;") 
        @:>> 
    } 
</div>